# ROS image, ros-humble-ros-core package installed
# on Ubuntu Jammy
# https://hub.docker.com/_/ros/
FROM ros:humble-ros-core-jammy

# Make use of bash, not the system shell
RUN mv /bin/sh /bin/sh.bak && ln -s /bin/bash /bin/sh

######################
# WORK FILES
######################

WORKDIR $HOME
COPY ./ ./
# Remove all possibly copied node modules
RUN rm -rf node_modules server/node_modules react-app/node_modules

######################
# ROS2 Humble Install
######################

# Using the ROS docker image
# It is no longer necessary to install ROS2
# or source.
# The ROS2 image makes use of an entrypoint script

# See the dockerfile here:
# https://github.com/osrf/docker_images/tree/20e3ba685bb353a3c00be9ba01c1b7a6823c9472/ros/humble/ubuntu/jammy 

#############################
# NodeJS and packages install
#############################

# Update packages repositories
RUN apt update
# Add standard packages
RUN apt install -y software-properties-common
RUN add-apt-repository -y universe
# Update the repositories again
# Install curl, quiet automatic yes
RUN apt update && apt install -y curl
# Install make and build tools
RUN apt install -y make build-essential cmake
# Remove any prior Node packages
RUN apt remove nodejs
# Install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | /bin/bash
# Install node version (Hydrogen LTS v18.18.2)
RUN \. $HOME/.nvm/nvm.sh && nvm install 18.18.2
# Install corepack
RUN npm install -g corepack
# Enable yarn
RUN corepack enable
# Install node packages
RUN (cd server && source /opt/ros/humble/setup.bash && yarn install)
RUN (cd react-app && yarn install)
# Build the ROS interface
RUN (cd health_interface && source /opt/ros/humble/setup.bash && colcon build)
# Compile the interface to Javascript
# https://github.com/RobotWebTools/rclnodejs-cli/tree/develop/message-generator-tool
RUN (cd server && source /opt/ros/humble/setup.bash && source ../health_interface/install/setup.bash && yarn rclnodejs-cli generate-ros-messages)
# Build the Typescript
RUN (cd server && source /opt/ros/humble/setup.bash && yarn tsc-build) 
# Source the health_interface and start the server
CMD ["/bin/bash", "-c", "cd server && source ../health_interface/install/setup.bash && yarn prod"]