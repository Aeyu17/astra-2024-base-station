# ROS image, ros-humble-ros-core package installed
# on Ubuntu Jammy
# https://hub.docker.com/_/ros/
FROM ros:humble-ros-core-jammy

# Make use of bash, not the system shell
RUN mv /bin/sh /bin/sh.bak && ln -s /bin/bash /bin/sh

######################
# WORK FILES
######################

WORKDIR $HOME
COPY ./ ./
# Remove all possibly copied node modules
RUN rm -rf node_modules server/node_modules react-app/node_modules

######################
# ROS2 Humble Install
######################

# Using the ROS docker image
# It is no longer necessary to install ROS2
# or source.
# The ROS2 image makes use of an entrypoint script

# See the dockerfile here:
# https://github.com/osrf/docker_images/tree/20e3ba685bb353a3c00be9ba01c1b7a6823c9472/ros/humble/ubuntu/jammy 

#############################
# NodeJS and packages install
#############################

# Update packages repositories
RUN apt update
# Add standard packages
RUN apt install -y software-properties-common
RUN add-apt-repository -y universe
# Update the repositories again
# Install curl, quiet automatic yes
RUN apt update && apt install -y curl
# Install make and build tools
RUN apt install -y make build-essential cmake

# Add repo key
RUN apt install -y ca-certificates gnupg
RUN mkdir -p /etc/apt/keyrings
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
# Add repository
RUN echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
RUN apt update
# Install node version
RUN apt install nodejs -y
# Install node packages
RUN (cd server && npm install)
RUN (cd react-app && npm install)
# Build the Typescript
RUN (cd server && npm run build) 

CMD ["/bin/bash", "-c", "cd server && npm start"]
